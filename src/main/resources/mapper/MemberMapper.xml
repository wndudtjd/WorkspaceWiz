<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wokrspacewiz.workspacewiz.mapper.MemberMapper">
    <sql id="memberBaseColumns">
        MEMBER_NUM,
        MEMBER_ID,
        MEMBER_PW,
        MEMBER_NAME,
        MEMBER_ADDR,
        MEMBER_ADDR_DETAIL,
        MEMBER_POST,
        MEMBER_REGIST,
        MEMBER_GENDER,
        MEMBER_PHONE1,
        MEMBER_PHONE2,
        MEMBER_EMAIL,
        MEMBER_BIRTH,
        MEMBER_POINT,
        MEMBER_EMAIL_CONF,
        MEMBER_TYPE
    </sql>
    <resultMap id="memberResultMap" type="member">
        <constructor>
            <idArg column="MEMBER_NUM" javaType="string" />
            <arg column="MEMBER_ID" javaType="string" />
            <arg column="MEMBER_PW" javaType="string" />
            <arg column="MEMBER_NAME" javaType="string" />
            <arg column="MEMBER_ADDR" javaType="string" />
            <arg column="MEMBER_ADDR_DETAIL" javaType="string" />
            <arg column="MEMBER_POST" javaType="string" />
            <arg column="MEMBER_REGIST" javaType="java.util.Date" />
            <arg column="MEMBER_GENDER" javaType="string" />
            <arg column="MEMBER_PHONE1" javaType="string" />
            <arg column="MEMBER_PHONE2" javaType="string" />
            <arg column="MEMBER_EMAIL" javaType="string" />
            <arg column="MEMBER_BIRTH" javaType="java.util.Date" />
            <arg column="MEMBER_POINT" javaType="integer" />
            <arg column="MEMBER_EMAIL_CONF" javaType="string" />
            <arg column="MEMBER_TYPE" javaType="memEnum" />
        </constructor>
    </resultMap>
    <insert id="memberInsert" parameterType="member">
        insert into members(<include refid="memberBaseColumns" />)
        values (#{memberNum},#{memberId},#{memberPw},#{memberName},#{memberAddr},#{memberAddrDetail},#{memberPost},sysdate,#{memberGender},#{memberPhone1},#{memberPhone2},#{memberEmail},#{memberBirth},0,'y',#{memberType})
    </insert>
    <select id="memberSelectList" resultMap="memberResultMap">
        select <include refid="memberBaseColumns" />
        from members
    </select>
    <select id="memberSelectOne" parameterType="string" resultMap="memberResultMap">
        select <include refid="memberBaseColumns" />
        from members
        where member_num = #{memberNum}
    </select>
    <update id="memberUpdate" parameterType="member">
        update members
        set MEMBER_ID = #{memberId},
            MEMBER_NAME = #{memberName},
            MEMBER_ADDR = #{memberAddr},
            MEMBER_ADDR_DETAIL = #{memberAddrDetail},
            MEMBER_POST = #{memberPost},
            MEMBER_REGIST = #{memberRegist},
            MEMBER_GENDER = #{memberGender},
            MEMBER_PHONE1 = #{memberPhone1},
            MEMBER_PHONE2 = #{memberPhone2},
            MEMBER_EMAIL = #{memberEmail},
            MEMBER_BIRTH = #{memberBirth}
        where MEMBER_NUM = #{memberNum}
    </update>
    <delete id="memberDelete" parameterType="string">
        delete from members where member_num = #{memberNum}
    </delete>
    <insert id="memberSignInInsert" parameterType="member">
        insert into members(<include refid="memberBaseColumns" />)
        values (#{memberNum},#{memberId},#{memberPw},#{memberName},#{memberAddr},#{memberAddrDetail},#{memberPost},sysdate,#{memberGender},#{memberPhone1},#{memberPhone2},#{memberEmail},#{memberBirth},0,null,#{memberType})
    </insert>
    <update id="userEmailCheckUpdate">
        update members
        set MEMBER_EMAIL_CONF = 'Y'
        where MEMBER_EMAIL = #{memberEmail} and member_email_conf is null
    </update>
    <update id="memberPwUpdate" parameterType="hashmap">
        update members
        set MEMBER_PW = #{memberPw}
        where MEMBER_ID = #{memberId}
    </update>
</mapper>